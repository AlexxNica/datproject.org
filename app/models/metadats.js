var request = require('../common/error-request.js')
var qs = require('querystring')
var request = require('../common/error-request.js')

metadats = {}

metadats.sanitize = function(metadat) {
  if (metadat.name) {
    metadat.name = metadat.name.trim()
  }
  if (metadat.description) {
    metadat.description = metadat.description.trim()
  }
  return metadat
}

/** Creating a metadat **/
metadats.create = function (cb, metadat) {
  var self = this
  var metadat = metadats.sanitize(metadat)
  if (!metadat.data.name || !metadat.data.description) {
    return cb(new Error('Requires a name and description.'))
  }

  var options = {
    uri: '/api/metadat',
    method: 'POST',
    json: metadat
  }

  request(options, function (err, resp, json) {
    if (err) return cb(err)
    metadat.id = json.id
    return cb(null, metadat)
  })
}

/**
 * TODO: this should be auto-generated by the frontend.
 * ...like a REST consumer js api. that has to exist, right?
 */

/** Functions to act upon metadats **/
metadats.query = function (params, cb) {
  // Parameters
  // params: dict
  //  keys represent the fields to filter upon
  if (!params) {
    return cb(new Error('Give at least one param or use the `all` function.'))
  }
  var options = {
    uri: '/api/metadat?' + qs.stringify(params),
    method: 'GET',
    json: true
  }
  request(options, function (err, resp, json) {
    return cb(err, json)
  })
}

metadats.all = function (cb) {
  var options = {
    uri: '/api/metadat',
    method: 'GET',
    json: true
  }
  request(options, function (err, resp, json) {
    return cb(err, json) //handled later
  })
}

metadats.getById = function (metadatId, cb) {
  var options = {
    uri: '/api/metadat/' + metadatId,
    method: 'GET',
    json: true
  }
  request(options, function (err, resp, json) {
    if (err) {
      return cb(new Error('Could not get that dat, are you sure the ID is right?'))
    }
    return cb(null, resp, json)
  })
}

module.exports = metadats
